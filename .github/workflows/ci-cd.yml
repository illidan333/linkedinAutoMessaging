name: JobHuntingMode CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_BACKEND: ghcr.io/${{ github.repository }}/jobhuntingmode-backend
  DOCKER_IMAGE_FRONTEND: ghcr.io/${{ github.repository }}/jobhuntingmode-frontend

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Test Backend
      run: |
        cd backend
        go test ./...

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '2.x'

    - name: Test Frontend
      run: |
        cd frontend
        flutter test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: ${{ env.DOCKER_IMAGE_BACKEND }}:${{ github.sha }}

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '2.x'

    - name: Build Frontend
      run: |
        cd frontend
        flutter build web

    - name: Upload frontend artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-build
        path: frontend/build/web

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download frontend artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend-build
        path: frontend/build/web

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Deploy with Ansible
      env:
        DOCKER_IMAGE_BACKEND: ${{ env.DOCKER_IMAGE_BACKEND }}:${{ github.sha }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        sudo apt-get update && sudo apt-get install -y ansible
        ansible-playbook -i infrastructure/ansible/inventory.ini infrastructure/ansible/playbooks/deploy.yml